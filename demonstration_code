#include <WiFiNINA.h>
#include <LiquidCrystal.h>
#include <Wire.h>
#include <SparkFun_AK975X_Arduino_Library.h>

char ssid[] = "NETGEAR";
char pass[] = "newvase123";
int status = WL_IDLE_STATUS;
WiFiServer server(80);
const int buttonPin = 8;
const int lcdPin = 9;

LiquidCrystal lcd(7, 6, 5, 4, 3, 2);

AK975X movementSensor;

int ir2, ir4;

int buttonState=LOW;
int helping=0;

WiFiClient client = server.available();

//int ledPin = 2;
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);

  lcd.begin(16, 2);
  pinMode(8, INPUT);
  pinMode(9, OUTPUT);

  Wire.begin();
  if (movementSensor.begin() == false) {
    Serial.println("Device not found. check wiring.");
    while(1);
  }
  
  //Serial.println("test");
  pinMode(buttonPin,INPUT);
  pinMode(lcdPin,OUTPUT);
  while(!Serial);

  enable_WiFi();
  connect_WiFi();

  server.begin();
  printWifiStatus();
}

void loop() {
  // put your main code here, to run repeatedly:
  client = server.available();

  if (movementSensor.available()) {
    ir2 = movementSensor.getIR2();
    ir4 = movementSensor.getIR4();

    movementSensor.refresh();

    Serial.println(ir2);
    Serial.println(ir4);
    delay(1000);
  }
  
  if (client) {
    if (buttonState==LOW)
            buttonState=digitalRead(buttonPin);
    printWEB();
  }
}

void printWifiStatus() {
  //print SSID of network:
  Serial.print("SSID: ");
  Serial.println(WiFi.SSID());

  //print board IP address:
  IPAddress ip = WiFi.localIP();
  Serial.print("IP address: ");
  Serial.println(ip);

  //print the recieved signal strength
  long rssi = WiFi.RSSI();
  Serial.print("signal strength (RSSI): ");
  Serial.print(rssi);
  Serial.println("dBm");

  Serial.print("To see thhis page in action, open a browser to http://");
  Serial.println(ip);
}

void enable_WiFi() {
  //check for the wifi module:
  if (WiFi.status() == WL_NO_MODULE) {
    Serial.println("Communication with WiFi module failed!");
    //don't continue
    while (true);
  }

  String fv = WiFi.firmwareVersion();
  if (fv < "1.0.0") {
    Serial.println("Please upgrade the firmware");
  }
}

void connect_WiFi() {
  //attempt to connect to WiFI network
  while (status != WL_CONNECTED) {
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(ssid);
    // connect to WPA/WPA2 network. Change this line if using open or WEP network
    status = WiFi.begin(ssid, pass);

    //wait 10 seconds for connection
    delay(10000);
  }
}

void printWEB() {
  if (client) {
    Serial.println("new client");
    String currentLine = "";
    while (client.connected()) {
      if (client.available()) {
        char c = client.read();
        Serial.write(c);
        if (c == '\n') {
          //if current line is blank, you got 2 newline characters in a row
          //that's the end of the client HTTP request, so send response
          if (currentLine.length() == 0) {
            //HTTP headers always start with a response code (e.g. HTTP/1.1 200 OK)
            // and a content-type so the client knows what's coming, then a blank line:
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println();

            client.println("<HTML>");
          client.print("<HEAD>");
          client.print("<meta http-equiv=\"refresh\" content=\"3\">");
          client.print("<TITLE />Zoomkat's meta-refresh test</title>");
          client.print("</head>");
          client.println("<BODY>");
          client.println("");

          digitalWrite(8, HIGH);
            lcd.clear();
            lcd.setCursor(3, 0);
            lcd.print("You're lookin");
            lcd.setCursor(2, 1);
            lcd.print("CUTE AS HELL");
            digitalWrite (9, HIGH);
           
          if (helping==0){

           
            if (buttonState==HIGH){
           
            client.print("HELP NEEDED: click <a href=\"/H\">here</a> to respond<br>");
            digitalWrite(8, HIGH);
            lcd.clear();
            lcd.setCursor(5, 0);
            lcd.print("Help is");
            lcd.setCursor(4, 1);
            lcd.print("requested");
            digitalWrite(9, HIGH);
            }
            //client.print("Click <a href=\"/L\">here</a> turn the LED off<br><br>");

          }
          else{
            client.print("click <a href=\"/L\">here</a> once client needs are met<br>");
            digitalWrite(8, HIGH);
            lcd.clear();
            lcd.setCursor(6, 0);
            lcd.print("Help");
            lcd.setCursor(3, 1);
            lcd.print("on the way");
            digitalWrite(9, HIGH);
            buttonState=LOW;
          }

           
            //the HTTP response ends with another blank line
            client.println();
            //break out of the while loop;
            break;
          }
          else {
            currentLine = "";
          }
        }
        else if (c != '\r') { //if you get anything else but a carriage return character,
          currentLine += c;
        }

        if (currentLine.endsWith("GET /H")) {
          digitalWrite(lcdPin, HIGH);
          helping=1;
          //c = '\n';
         
        }
        if (currentLine.endsWith("GET /L")) {
          digitalWrite(lcdPin, LOW);
          helping=0;
         
          //c = '\n';
         
        }
      }
    }
    //close connection
    client.stop();
    Serial.println("client disconnected");
  }
}
